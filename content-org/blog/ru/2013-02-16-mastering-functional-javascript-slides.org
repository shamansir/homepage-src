#+title: Слайды «Постигаем функциональный JavaScript»
#+datetime: 16 Feb 2013 22:23
#+tags: [ javascript, functional-programming ]

В языке JavaScript, как и, к примеру, в Python, функции являются
объектами. Эта немаловажное обстоятельство позволяет программистам
писать на JS чистый (или не очень, раз уж монады не включены в язык :) )
функциональный код. Многие из нас и поныне забывают о такой особенности
JS, но факт остаётся фактом: код на JavaScript может быть функциональным
--- и, что самое прекрасное, он был придуман таковым изначально, с
начала времён.

Предназначение этих слайдов --- открыть вам мощь функционального JS.
Здесь нет разбора тривиальных /map/ / /filter/, в пользу /каррируемых/
функций, /чейнинга/ и /композиции/ функций, в которых кода-то ---
несколько строк. Блюдо приправлено функциональными трюками. Ничего из
того, что появится в новых версиях или недавно появилось: лишь старый
добрый JavaScript.

(Вводная информация, конечно же, тоже присутствует)

Итак, поехали:

https://speakerdeck.com/shamansir/postighaiem-funktsional-nyi-javascript

*** Ссылки
:PROPERTIES:
:CUSTOM_ID: ссылки
:END:
Ссылки на примеры:

- Каррирование функций:
  - [[http://codepen.io/shamansir/pen/HskmE][codepen.io/shamansir/pen/HskmE]]
    /(пример с парсером)/
  - [[http://codepen.io/shamansir/pen/kBzJe][codepen.io/shamansir/pen/kBzJe]]
- Частичные применения:
  - [[http://codepen.io/shamansir/pen/xCrgz][codepen.io/shamansir/pen/xCrgz]]
- Цепочки функций:
  - [[http://codepen.io/shamansir/pen/AaHqy][codepen.io/shamansir/pen/AaHqy]]
- Композиция функций:
  - [[http://codepen.io/shamansir/pen/Funwt][codepen.io/shamansir/pen/Funwt]]

Lyfe.js: [[http://bitbucket.org/balpha/lyfe][bitbucket.org/balpha/lyfe]]
Статья о lyfe.js:
[[http://balpha.de/2011/06/introducing-lyfe-yield-in-javascript][Introducing
Lyfe: yield in JavaScript]]
